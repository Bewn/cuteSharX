From 324e46dbef938f21658138cc33f1662c1ba6cec6 Mon Sep 17 00:00:00 2001
From: Luke Shumaker <lukeshu@parabola.nu>
Date: Mon, 7 Aug 2017 20:24:01 -0400
Subject: [PATCH 28/38] nspawn: Hoist the decision to sync cgroups from the
 callee sync_cgroup() to the caller cgroup_setup()

---
 src/nspawn/nspawn-cgroup.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/nspawn/nspawn-cgroup.c b/src/nspawn/nspawn-cgroup.c
index 1c20a3f630..7ef6b4b8f4 100644
--- a/src/nspawn/nspawn-cgroup.c
+++ b/src/nspawn/nspawn-cgroup.c
@@ -146,9 +146,6 @@ static int sync_cgroup(pid_t pid, CGroupUnified outer_cgver, CGroupUnified inner
         const char *fn;
         int r;
 
-        if ((outer_cgver >= CGROUP_UNIFIED_SYSTEMD232) == (inner_cgver >= CGROUP_UNIFIED_SYSTEMD232))
-                return 0;
-
         /* When the host uses the legacy cgroup setup, but the
          * container shall use the unified hierarchy, let's make sure
          * we copy the path from the name=systemd hierarchy into the
@@ -201,7 +198,7 @@ finish:
         return r;
 }
 
-static int create_subcgroup(pid_t pid, bool keep_unit, CGroupUnified outer_cgver, CGroupUnified inner_cgver) {
+static int create_subcgroup(pid_t pid, bool keep_unit) {
         _cleanup_free_ char *cgroup = NULL;
         CGroupMask supported;
         const char *payload;
@@ -258,11 +255,14 @@ int cgroup_setup(pid_t pid, CGroupUnified outer_cgver, CGroupUnified inner_cgver
 
         int r;
 
-        r = sync_cgroup(pid, outer_cgver, inner_cgver, uid_shift);
-        if (r < 0)
-                return r;
+        if ((outer_cgver >= CGROUP_UNIFIED_SYSTEMD232) != (inner_cgver >= CGROUP_UNIFIED_SYSTEMD232)) {
+                /* sync the name=systemd hierarchy with the unified hierarchy */
+                r = sync_cgroup(pid, outer_cgver, inner_cgver, uid_shift);
+                if (r < 0)
+                        return r;
+        }
 
-        r = create_subcgroup(pid, keep_unit, outer_cgver, inner_cgver);
+        r = create_subcgroup(pid, keep_unit);
         if (r < 0)
                 return r;
 
-- 
2.18.0

